CLASS cl_sadl_shortdump DEFINITION
  PUBLIC
  FINAL
  CREATE PRIVATE
  GLOBAL FRIENDS cl_sadl_aunit_friend
                 cl_sadl_contract_test_helper
                 cx_sadl_shortdump.

  PUBLIC SECTION.
    CLASS-METHODS raise_for_error IMPORTING io_error TYPE REF TO if_sadl_fatal_error.
  PROTECTED SECTION.
  PRIVATE SECTION.
    CLASS-METHODS trigger_common_dump IMPORTING io_error TYPE REF TO if_sadl_fatal_error.
    CLASS-METHODS trigger_appl_model_error_dump IMPORTING io_error TYPE REF TO if_sadl_fatal_error.
    CLASS-METHODS trigger_database_failure_dump IMPORTING io_error TYPE REF TO if_sadl_fatal_error.
    CLASS-METHODS aunit_exc_instead_of_dump IMPORTING iv_replace_dump_with_exception TYPE abap_bool DEFAULT abap_true ##RELAX.

    CLASS-DATA mv_aunit_exc_instead_of_dump TYPE abap_bool VALUE abap_false.
ENDCLASS.



CLASS CL_SADL_SHORTDUMP IMPLEMENTATION.


  METHOD aunit_exc_instead_of_dump.
    mv_aunit_exc_instead_of_dump = iv_replace_dump_with_exception.
  ENDMETHOD.


  METHOD raise_for_error.
    CASE io_error->get_classification( ).
      WHEN if_sadl_fatal_error=>co_classification-bad_application_modeling.
        trigger_appl_model_error_dump( io_error ).
      WHEN if_sadl_fatal_error=>co_classification-database_issue.
        trigger_database_failure_dump( io_error ).
      WHEN OTHERS.
        trigger_common_dump( io_error ).
    ENDCASE.

    ASSERT mv_aunit_exc_instead_of_dump = abap_true. " This line is not reached in production.
  ENDMETHOD.


  METHOD trigger_appl_model_error_dump.
    DATA(_) = COND i( WHEN mv_aunit_exc_instead_of_dump <> abap_true THEN
     THROW SHORTDUMP cx_sadl_dump_appl_model_error( io_error )
"########################################################################################
"#                                  !!! ATTENTION !!!                                   #
"# Processing was deliberately stopped because an application modeling error has been   #
"# detected. Please identify the root cause and contact the application owners:         #
"#   Carefully read the "Error Analysis" section of this dump ("Long text" tab in ADT   #
"#   or if viewed in SAP GUI (transaction ST22) in "ABAP Developer View").              #
"#   For more detailed information refer to the exception chain contained in the dump.  #
"#   Identify the CDS view and/or service implementation classes to route this issue to #
"#   the responsible application component. To facilitate the support incident please   #
"#   attach a full export of this dump and a description of your scenario. Thank you!   #
"########################################################################################
     ELSE THROW RESUMABLE cx_sadl_dump_appl_model_error( io_error ) ). "<- for unit tests only
  ENDMETHOD.


  METHOD trigger_common_dump.
    DATA(_) = COND i( WHEN mv_aunit_exc_instead_of_dump <> abap_true THEN
     THROW SHORTDUMP cx_sadl_shortdump( io_error )
"########################################################################################
"#                                  !!! ATTENTION !!!                                   #
"# Before opening a ticket, check if you can resolve the issue yourself:                #
"#   Carefully read the "Error Analysis" section of this dump ("Long text" tab in ADT   #
"#   or if viewed in SAP GUI (transaction ST22) in "ABAP Developer View").              #
"#   The reason for the shortdump might already be given in that section.               #
"#   (Frequent causes: inconsistent service model/database errors/memory issues/...)    #
"#                                                                                      #
"# If you believe the application modeling to be correct after this evaluation please   #
"# create an incident for the appropriate component (ABAP dictionary/database/SADL/...) #
"# and attach a full export of this dump and a description of your scenario. Thank you! #
"########################################################################################
     ELSE THROW RESUMABLE cx_sadl_shortdump( io_error ) ). "<- for unit tests only
  ENDMETHOD.


  METHOD trigger_database_failure_dump.
    DATA(_) = COND i( WHEN mv_aunit_exc_instead_of_dump <> abap_true THEN
     THROW SHORTDUMP cx_sadl_dump_database_failure( io_error )
"########################################################################################
"#                                  !!! ATTENTION !!!                                   #
"# Before opening a ticket, check if you can resolve the issue yourself:                #
"#   Refer to the "Chain of Exception Objects" section of this dump ("Long text" tab in #
"#   ADT or if viewed in SAP GUI (transaction ST22) in "ABAP Developer View").          #
"#   Therein a human-readable representation of the executed SQL and the error which it #
"#   caused may indicate issues with the service modeling and/or implementation.        #
"#                                                                                      #
"# If you believe the application modeling to be correct after this evaluation please   #
"# create an incident for the appropriate component (either the database or SADL) and   #
"# attach a full export of this dump and a description of your scenario. Thank you!     #
"########################################################################################
     ELSE THROW RESUMABLE cx_sadl_dump_database_failure( io_error ) ). "<- for unit tests only
  ENDMETHOD.
ENDCLASS.